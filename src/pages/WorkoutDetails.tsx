
import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { ArrowLeft, Play, Clock, TrendingUp, Flame } from 'lucide-react';

const WorkoutDetails = () => {
  const navigate = useNavigate();
  
  const workout = {
    title: 'Yoga Ch√†o M·∫∑t Tr·ªùi',
    duration: '15 ph√∫t',
    level: 'C∆° b·∫£n',
    calories: '45 kcal',
    description: 'Kh·ªüi ƒë·ªông ho√†n h·∫£o cho ng√†y m·ªõi v·ªõi chu·ªói ƒë·ªông t√°c truy·ªÅn th·ªëng c·ªßa yoga. B√†i t·∫≠p n√†y gi√∫p ƒë√°nh th·ª©c c∆° th·ªÉ, tƒÉng c∆∞·ªùng tu·∫ßn ho√†n m√°u v√† mang l·∫°i nƒÉng l∆∞·ª£ng t√≠ch c·ª±c.',
    image: 'üåÖ',
    poses: [
      { name: 'T∆∞ th·∫ø N√∫i', sanskrit: 'Tadasana', duration: '30s', image: 'üèîÔ∏è' },
      { name: 'T∆∞ th·∫ø Ch√†o m·∫∑t tr·ªùi', sanskrit: 'Surya Namaskara', duration: '2 ph√∫t', image: 'üåÖ' },
      { name: 'T∆∞ th·∫ø Con ch√≥ √∫p m·∫∑t', sanskrit: 'Adho Mukha Svanasana', duration: '1 ph√∫t', image: 'üêï' },
      { name: 'T∆∞ th·∫ø Chi·∫øn binh I', sanskrit: 'Virabhadrasana I', duration: '45s m·ªói b√™n', image: '‚öîÔ∏è' },
      { name: 'T∆∞ th·∫ø Tam gi√°c', sanskrit: 'Trikonasana', duration: '30s m·ªói b√™n', image: 'üî∫' },
      { name: 'T∆∞ th·∫ø C√¢y', sanskrit: 'Vrikshasana', duration: '45s m·ªói b√™n', image: 'üå≥' },
      { name: 'T∆∞ th·∫ø Th∆∞ gi√£n', sanskrit: 'Savasana', duration: '2 ph√∫t', image: 'üßò‚Äç‚ôÄÔ∏è' }
    ]
  };

  const handleStartWorkout = () => {
    navigate('/workout-setup');
  };

  return (
    <div className="min-h-screen bg-ivory-50">
      {/* Header */}
      <div className="relative">
        <div className="absolute top-4 left-4 z-10">
          <Button
            variant="ghost"
            onClick={() => navigate(-1)}
            className="rounded-full bg-white/80 backdrop-blur-sm shadow-sm"
          >
            <ArrowLeft size={20} />
          </Button>
        </div>
        
        {/* Hero Image */}
        <div className="h-64 bg-gradient-to-br from-sage-200 to-sage-300 flex items-center justify-center">
          <div className="text-6xl">{workout.image}</div>
        </div>
      </div>

      <div className="p-6 -mt-8 relative z-10">
        {/* Main Info Card */}
        <Card className="p-6 bg-white shadow-lg rounded-2xl mb-6">
          <h1 className="text-2xl font-serif font-bold text-sage-800 mb-3">
            {workout.title}
          </h1>
          
          <div className="flex items-center space-x-4 mb-4">
            <Badge variant="secondary" className="bg-sage-100 text-sage-700">
              <Clock size={14} className="mr-1" />
              {workout.duration}
            </Badge>
            <Badge variant="secondary" className="bg-sandy-100 text-sandy-700">
              <TrendingUp size={14} className="mr-1" />
              {workout.level}
            </Badge>
            <Badge variant="secondary" className="bg-coral-100 text-coral-700">
              <Flame size={14} className="mr-1" />
              {workout.calories}
            </Badge>
          </div>
          
          <p className="text-sage-600 leading-relaxed">
            {workout.description}
          </p>
        </Card>

        {/* Poses List */}
        <Card className="p-6 bg-white shadow-lg rounded-2xl mb-6">
          <h2 className="text-lg font-serif font-bold text-sage-800 mb-4">
            C√°c t∆∞ th·∫ø trong b√†i t·∫≠p
          </h2>
          
          <div className="space-y-3">
            {workout.poses.map((pose, index) => (
              <div key={index} className="flex items-center space-x-4 p-3 bg-sage-50 rounded-xl">
                <div className="text-2xl">{pose.image}</div>
                <div className="flex-1">
                  <h3 className="font-semibold text-sage-800">{pose.name}</h3>
                  <p className="text-sm text-sage-600 italic">{pose.sanskrit}</p>
                </div>
                <div className="text-sm text-sage-600 font-medium">
                  {pose.duration}
                </div>
              </div>
            ))}
          </div>
        </Card>

        {/* Benefits */}
        <Card className="p-6 bg-white shadow-lg rounded-2xl mb-24">
          <h2 className="text-lg font-serif font-bold text-sage-800 mb-4">
            L·ª£i √≠ch c·ªßa b√†i t·∫≠p
          </h2>
          
          <div className="grid grid-cols-2 gap-4">
            <div className="text-center p-4 bg-sage-50 rounded-xl">
              <div className="text-2xl mb-2">üí™</div>
              <p className="text-sm font-medium text-sage-800">TƒÉng s·ª©c m·∫°nh</p>
            </div>
            <div className="text-center p-4 bg-sage-50 rounded-xl">
              <div className="text-2xl mb-2">ü§∏‚Äç‚ôÄÔ∏è</div>
              <p className="text-sm font-medium text-sage-800">C·∫£i thi·ªán ƒë·ªô d·∫ªo</p>
            </div>
            <div className="text-center p-4 bg-sage-50 rounded-xl">
              <div className="text-2xl mb-2">üòå</div>
              <p className="text-sm font-medium text-sage-800">Gi·∫£m stress</p>
            </div>
            <div className="text-center p-4 bg-sage-50 rounded-xl">
              <div className="text-2xl mb-2">‚ö°</div>
              <p className="text-sm font-medium text-sage-800">TƒÉng nƒÉng l∆∞·ª£ng</p>
            </div>
          </div>
        </Card>
      </div>

      {/* Fixed Start Button */}
      <div className="fixed bottom-0 left-0 right-0 p-6 bg-white border-t border-sage-200">
        <Button
          onClick={handleStartWorkout}
          className="w-full gradient-sage text-white font-medium py-4 text-lg rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300"
        >
          <Play size={20} className="mr-2" />
          B·∫Øt ƒë·∫ßu t·∫≠p
        </Button>
      </div>
    </div>
  );
};

export default WorkoutDetails;
